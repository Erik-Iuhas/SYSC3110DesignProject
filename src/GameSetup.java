import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class GameSetup {

    private HashMap<String,Territory> world_map;
    private String territory_CSV;
    /**
     * GameSetup is in charge of calling private methods which
     * distribute the troops to players and then begins to place
     * the troops randomly on the world_map
     * @param players a list of the players, provided by Game object
     */
    public GameSetup(ArrayList<Player> players){
        this.territory_CSV = "TerritoryNeighbours.csv";
        this.world_map = new HashMap<>();
        distribute_troops(players);
        set_neighbours(read_csv());
        }

    /**
     * By the rules of risk you can have 3-6 players, when there are 3 players
     * each player starts with 35 troops, this value lowers by five for each
     * player new player.
     * @param players an array list of players
     */
    private void provide_troops(ArrayList<Player> players) {
        int distribute_val = 35 - 5 * (players.size() - 3);
        for (Player x : players) {
            x.add_troops(distribute_val);
        }
    }
    private void distribute_troops(ArrayList<Player> players){

    }

    /**
     * Iterate through ArrayList generated by CSV to obtain neighbours for
     * territories.
     * @param territories ArrayList generated from TerritoryNeighbours.csv
     */
    private void set_neighbours(ArrayList<String[]> territories){
        String continent_name = "";
        String territory_name = "";
        for(String[] temp_territory : territories){
            continent_name = temp_territory[0];
            territory_name = temp_territory[1];
            world_map.put(territory_name,new Territory(continent_name,territory_name));
        }
        for(String[] temp_territory : territories){
            territory_name = temp_territory[1];
            ArrayList<String> temp_sub = new ArrayList<String>(Arrays.asList(temp_territory));
            for(String temp_neighbours : temp_sub.subList(2,temp_sub.size())){
                world_map.get(territory_name).set_neighbours(temp_neighbours, world_map.get(temp_neighbours));
            }
        }
        for(Territory x : world_map.values()){
            x.print_info();
        }
    }

    /**
     * Read the CSV file and obtain the Neighbours
     * @return
     */
    private ArrayList<String[]> read_csv(){
        String row = "";
        ArrayList<String[]> territory_list = new ArrayList<>();

        try {
            BufferedReader reader = new BufferedReader(new FileReader(this.territory_CSV));
            reader.readLine(); //Skip first line
            while((row = reader.readLine()) != null){
                String[] territories = row.split(",");
                territory_list.add(territories);
            }
        } catch (FileNotFoundException e){
            System.out.println("Error: File not found");
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return territory_list;

    }
}

